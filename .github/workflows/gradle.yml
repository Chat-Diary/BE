# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "CHAT-63-DevOps-ToolChain" ]
  pull_request:
    branches: [ "CHAT-63-DevOps-ToolChain" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Gradle
        run: ./gradlew --warning-mode all build

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3  # Checkout 액션 버전을 v3으로 일치

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.HOST }} >> ~/.ssh/known_hosts

      - name: Check if JAR file exists
        run: |
          if [ -f "./build/libs/char-diary-app-0.0.1-SNAPSHOT.jar" ]; then
            echo "JAR file exists"
          else
            echo "JAR file does not exist"
      
          fi
          
      - name: Copy jar file to remote
        uses: appleboy/scp-action@master
        with:
          username: ec2-user
          host: ${{ secrets.HOST }}
          key: ${{ secrets.PRIVATE_KEY }}
          source: "./build/libs/char-diary-app-0.0.1-SNAPSHOT.jar"          
          target: "/home/ec2-user/cicd"

      - name: Copy deploy script file to remote
        uses: appleboy/scp-action@master
        with:
          username: ec2-user
          host: ${{ secrets.HOST }}
          key: ${{ secrets.PRIVATE_KEY }}
          source: "deploy.sh"
          target: "/home/ec2-user/cicd"

      - name: Execute deploy script
        uses: appleboy/ssh-action@master
        with:
          username: ec2-user
          host: ${{ secrets.HOST }}
          key: ${{ secrets.PRIVATE_KEY }}
          script: |
            chmod +x /home/ec2-user/cicd/deploy.sh
            sh /home/ec2-user/cicd/deploy.sh

