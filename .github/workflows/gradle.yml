name: Java CI/CD with Gradle

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Gradle
        run: ./gradlew --warning-mode all build -i
        env:
          OPEN_AI_KEY: ${{ secrets.OPEN_AI_KEY }}
          AIPROMPT_CHICHI: ${{ secrets.AIPROMPT_CHICHI }}
          AIPROMPT_DADA: ${{ secrets.AIPROMPT_DADA }}
          AIPROMPT_LULU: ${{ secrets.AIPROMPT_LULU }}

  docker-build:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permisson for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle (without Test)
        run: ./gradlew clean build -x test --stacktrace

      - name: Docker Hub build & push
        run: |
          docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_PWD }}
          docker build --build-arg OPEN_AI_KEY=${{ secrets.OPEN_AI_KEY }} \
          --build-arg DEV_DB_HOST=${{ secrets.DEV_DB_HOST }} \
          --build-arg DEV_DB_PASSWORD=${{ secrets.DEV_DB_PASSWORD }} \
          --build-arg DEV_DB_USER=${{ secrets.DEV_DB_USER }} \
          --build-arg PROD_DB_HOST=${{ secrets.PROD_DB_HOST }} \
          --build-arg PROD_DB_PASSWORD=${{ secrets.PROD_DB_PASSWORD }} \
          --build-arg PROD_DB_USER=${{ secrets.PROD_DB_USER }} \
          --build-arg ACTIVE_PROFILE=${{ secrets.ACTIVE_PROFILE }} \
          --build-arg S3_BUCKET=${{ secrets.S3_BUCKET }} \
          --build-arg REGION=${{ secrets.REGION }} \
          --build-arg ACCESS_KEY=${{ secrets.ACCESS_KEY }} \
          --build-arg SECRET_KEY=${{ secrets.SECRET_KEY }} \
          --build-arg KAKAO_API_KEY=${{ secrets.KAKAO_API_KEY }} \
          --build-arg KAKAO_REDIRECT_URI=${{ secrets.KAKAO_REDIRECT_URI }} \
          --build-arg KAKAO_REDIRECT_URI_LOCAL=${{ secrets.KAKAO_REDIRECT_URI_LOCAL }} \
          --build-arg AIPROMPT_DADA=${{ secrets.AIPROMPT_DADA }} \
          --build-arg AIPROMPT_CHICHI=${{ secrets.AIPROMPT_DADA }} \
          --build-arg AIPROMPT_LULU=${{ secrets.AIPROMPT_DADA }} \
          -t ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_REPO_NAME }} .
          docker images
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_REPO_NAME }}

      - name: deploy
        uses: appleboy/ssh-action@master
        with:
          username: ec2-user
          host: ${{ secrets.WAS_HOST }}
          key: ${{ secrets.WAS_PRIVATE_KEY }}
          port: ${{ secrets.WAS_PORT }}
          script: |
            sudo docker ps
            sudo docker rm -f $(sudo docker ps -qa)
            sudo docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_REPO_NAME }}
            sudo docker run -d -p 8080:8080 ${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_REPO_NAME }}
            sudo docker image prune -f